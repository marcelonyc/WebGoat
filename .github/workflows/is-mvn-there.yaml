name: mvn-presence
on: workflow_dispatch
    
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
jobs:
    mvn-presence:
        name: mvn-presence
        runs-on: ubuntu-latest
        env:
          OIDC_PROVIDER_NAME: 'marcelo-github'
          REPO_RESOLVE_RELEASES: 'marcelo-webgoat-remote'
          REPO_RESOLVE_SNAPSHOTS: 'marcelo-webgoat-remote'
          REPO_DEPLOY_RELEASES: 'marcelo-webgoat-local'          
          JF_URL: https://${{ vars.JF_URL }}/
          # JFROG_CLI_BUILD_PROJECT JF_PROJECT: ${{ vars.JF_PROJECT }}
          JF_BUILD_NAME: 'marcelo-webgoat-ga-build'
          JF_BUILD_NUMBER: ${{ github.run_number }}

        steps:
          - name: Setup JFrog CLI
            uses: jfrog/setup-jfrog-cli@v4
            id: setup-cli
            env:
              JF_URL: https://${{ vars.JF_URL }}/
              JF_PROJECT: ${{ vars.JF_PROJECT }}
            with:
                oidc-provider-name: ${{ env.OIDC_PROVIDER_NAME }}            

          - name: Set up JDK 21
            uses: actions/setup-java@v4.2.1
            with:
              distribution: 'temurin'
              java-version: 21
              architecture: x64

          - name: configure jfrog environment
            run: |
              # Use a curated repository for python dependencies resolution
              jf mvnc --repo-deploy-releases=${{ env.REPO_DEPLOY_RELEASES }} \
              --repo-deploy-snapshots=${{ env.REPO_DEPLOY_RELEASES }} \
              --repo-resolve-releases=${{ env.REPO_RESOLVE_RELEASES }} \
              --repo-resolve-snapshots=${{ env.REPO_RESOLVE_SNAPSHOTS }} \
              --use-wrapper=true
              
          - name: IS mvn There?
            run: |
              jf mvn -v

          